
Talk to giles:
-> how to reorder things in evaluation?
  b + ( a + c ) might be bigger than a + ( b + c ) if precedence is different
  sorting might normalize b + ( x + y ) ===> b + ( y + x ), but it's not smaller.
  a + ( b + 3 ) might be bigger than (2 + ( 1 + ( a +  b) )) in LPO if a < 2. (it needs to be bigger since it might be introduced during proof search, right?)
  -> ideas: 

    1) order by total arbitrary ordering
    -> check for simplification after evaluating

    2) order by simpl ordering. 
    -> helps in case of LPO and KBO (as they are implemented right now)
    -> problem: only topological ordering possible 
    -> comparisons expensive 
    -> sorting expensive

-> check whether a + ( b + c ) < (a + b) + c for the ordering and normalize to (a + b) + c instead of (a + (b + c)) if not.

TODO:
  ============ Simplification rule: Rebalancing
    Equality resolution* -> Done

    s != t | C[X]
    -------------  if s != t can be rewritten to X != r
        C[r]

    example:

    c0 * X0 != c1 * X1 | p(X0, X1)
    ------------------------------- since c0 * X0 != c1 * X1 can be rewritten to X0 = c1 * X1 / c0
      p(c1 * X1 / c0, X1)

    OR

    c0 * X0 != c1 * X1 | p(X0, X1)
    ------------------------------- since c0 * X0 != c1 * X1 can be rewritten to X1 = c0 * X0 / c1
      p(X0, c0 * X0 / c1)


    Yields a most general instantiation.
    ==> Done.

  What about
    1) x+y != 5 \/ C[x]


    TODO:
    - inversion 6 + 2x = 6y ==> x = 3y - 3
    ==> Done.

  ============ Simplification rule: Linear expression simplification
    2) C[y + t] -> C[y]
       C[c * y + t + ...] -> C[y]

  ============ UWA extension
    3)
      uwa + equality resolution to handle:
       f(X + 1) != f(0)
      uwa + eq factoring

  ============ UWA extension
    4) Normalization:
         c * -u[X0] ==> -c * u[X0]
         c != ((c * X0) + (c * X0)) | C[X0, ...]




=========================================== Keep in mind:
1) semantic subsumption
    k >= 1    
    k != 0 can be deleted
2) evaluation/simplification 
  2.1)

    c*x = x \/ C
    --------------
      x = 0 \/ C

    equivalent to

    c*x = 0 \/ C
    --------------
      x = 0 \/ C

  2.2)
    x > -x ==> x < 0
    -x != x ==> x != 0
    -x == x ==> x == 0
    minus(X0) != X0

3) unwrapping around equalities
  2 * a = 2 * X0 =====> a = X0  


=========================================== READ: 
  - Conflict Resolution. Korovin, Voronkov, Tsiskaridze
  - Implementing Conflict Resolution.
  - LASCA Linear Arithmetic Superposition Calculus
  - Bound Propagation (?)

=========================================== IDEAS: 
  - Weak normal form for multiplication ( a / b ==> a * (1/b) )
  - permit sideconditions for rebalancing equalities. 

    s != t | C[X]
    -------------  if s != t can be rewritten to X != r
        C[r]

      X0 * t != s can be rewritten to X0 != s/t  
          if definitelyNonZero(t)
        where definitelyNonZero(t) 
          - if searchspace contains unit literal t != 0
          - if searchspace contains unit literal t  = c for some non-zero integer c
          - if searchspace contains unit literal t > 0
          - if searchspace contains unit literal t < c for some integer c <= zero
          - if searchspace contains unit literal t > c for some integer c >= zero
          - if clause `context` C[X] contains literal t  = >
          - if clause `context` C[X] contains literal t != c for some non-zero integer c
          - if clause `context` C[X] contains literal t >= c for some non-zero integer c (in normal form)
          - if clause `context` C[X] contains literal t >= c for some integer c <= zero
          - if clause `context` C[X] contains literal t <= c for some integer c >= zero

          - if context contains t[X0] != uminus(t[X1])
      
      f(X0) != t can be rewritten to X0 != g[t]  
          - if context contains g[f(X0)] = X0

          61| 	0.26	(u[] * X0)  = u[X0]
            => could derive inversion of rhs

          66| 	0.21	(c * X0)  = u[X0]
            => could derive inversion of rhs

    X = X + Y can be rewritten to Y = 0

